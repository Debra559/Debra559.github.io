{
    "version": "https://jsonfeed.org/version/1",
    "title": "Debra",
    "subtitle": "去留无意，漫随天外云卷云舒",
    "icon": "https://jinjiaojiao.top/images/favicon.ico",
    "description": "金同学的个人博客",
    "home_page_url": "https://jinjiaojiao.top",
    "items": [
        {
            "id": "https://jinjiaojiao.top/2024/02/07/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/",
            "url": "https://jinjiaojiao.top/2024/02/07/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/",
            "title": "复盘in2vec",
            "date_published": "2024-02-07T05:26:07.000Z",
            "content_html": "<p>2024-2-7</p>\n<p>复盘：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NWTEFCLVVuaWJvL2lucjJ2ZWM/dGFiPXJlYWRtZS1vdi1maWxl\">https://github.com/CVLAB-Unibo/inr2vec?tab=readme-ov-file</span></p>\n<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>用的阿里云服务器</p>\n<p>vscode-&gt; 先下载扩展 remote-ssh</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ssh username@公有ip</span><br><span class=\"line\"></span><br><span class=\"line\">username 经常是root</span><br><span class=\"line\"></span><br><span class=\"line\">.config 选一个本地的 我就是第一个C:/29785/.config 差不多这个</span><br><span class=\"line\"></span><br><span class=\"line\">Linux</span><br><span class=\"line\"></span><br><span class=\"line\">password:输入你自己的</span><br></pre></td></tr></table></figure></p>\n<p>进入终端</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir cs</span><br><span class=\"line\">cd cs</span><br><span class=\"line\">mkdir in2vec</span><br></pre></td></tr></table></figure></p>\n<p>发现没 conda</p>\n<h2 id=\"服务器安装anaconda\"><a class=\"anchor\" href=\"#服务器安装anaconda\">#</a> 服务器安装 anaconda</h2>\n<h4 id=\"下载anaconda\"><a class=\"anchor\" href=\"#下载anaconda\">#</a> 下载 anaconda</h4>\n<p>后面的链接可以去官网查找自己适合的版本</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://repo.anaconda.com/archive/Anaconda3-5.3.0-Linux-x86_64.sh</span><br></pre></td></tr></table></figure></p>\n<p>.sh 为 Linux 后缀</p>\n<p>——————————————————</p>\n<p>如果出现</p>\n<blockquote>\n<p>bash: wget: command not found</p>\n</blockquote>\n<p>具体解决办法如下:<br />\nDebian/Ubuntu 系统，需要执行以下命令：</p>\n<blockquote>\n<p>apt-get install -y wget</p>\n</blockquote>\n<p>CentOS 系统则需要输入下面指令:</p>\n<blockquote>\n<p>yum install wget -y</p>\n</blockquote>\n<p>————————————————————</p>\n<h4 id=\"赋权anaconda\"><a class=\"anchor\" href=\"#赋权anaconda\">#</a> 赋权 anaconda</h4>\n<p>接下来我们需要首先赋权再执行安装程序，依次输入下面两句命令:</p>\n<blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x Anaconda3-5.3.0-Linux-x86_64.sh</span><br><span class=\"line\"></span><br><span class=\"line\">./Anaconda3-5.3.0-Linux-x86_64.sh</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>然后出现下面图所示:</p>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/OKcNDvCVY75lrqe.png\" alt=\"image.png\" /></p>\n<h4 id=\"一直点击enter回车键\"><a class=\"anchor\" href=\"#一直点击enter回车键\">#</a> 一直点击 Enter（回车键）</h4>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/mIkfztbra6cKnYT.png\" alt=\"image.png\" /></p>\n<p>此时显示 Anaconda 的信息，并且会出现 More，继续按 Enter，直到如下图所示:</p>\n<h4 id=\"输入-yes\"><a class=\"anchor\" href=\"#输入-yes\">#</a> 输入 yes</h4>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/bEM3dxyNGqgoz4K.png\" alt=\"image.png\" /></p>\n<h4 id=\"继续点击-enter\"><a class=\"anchor\" href=\"#继续点击-enter\">#</a> 继续点击 Enter</h4>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/zZvmdlD3Gcahxqu.png\" alt=\"image.png\" /></p>\n<h4 id=\"输入-yes添加环境变量\"><a class=\"anchor\" href=\"#输入-yes添加环境变量\">#</a> 输入 yes，添加环境变量</h4>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/yBq74es8zYAwDiC.png\" alt=\"image.png\" /></p>\n<p>^^^^^^^^^^^^^^^^^^^^^^^^^^^</p>\n<p>这里需要注意点的就是如果你直接跳过这部设置环境变量的话：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[no ] &gt;&gt;&gt;</span><br></pre></td></tr></table></figure></p>\n<p>那你需要自己到这个文件夹设置你安装 Anaconda 路径</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find -name &quot;anaconda3&quot;</span><br></pre></td></tr></table></figure></p>\n<p>（比如上面显示我的是）</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./anaconda3</span><br></pre></td></tr></table></figure></p>\n<p>单击进去，在最后一行添加：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=./anaconda3/bin:$PATH</span><br></pre></td></tr></table></figure></p>\n<p>这里只是个示例，具体的还是要看你们自己安装的路径。</p>\n<p>然后保存更改，输入下面这句指令：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure></p>\n<p>—————————————————————</p>\n<h4 id=\"完成安装以及检测是否安装成功\"><a class=\"anchor\" href=\"#完成安装以及检测是否安装成功\">#</a> 完成安装以及检测是否安装成功</h4>\n<p>打开新的终端后，进入自己的文件夹目录下，输入 anaconda -V（注意 a 要小写，V 要大写），conda -V ,</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda -V</span><br><span class=\"line\">或者</span><br><span class=\"line\">conda --version</span><br></pre></td></tr></table></figure></p>\n<p>显示版本信息，若显示则表示安装成功。</p>\n<p><code>conda 4.5.11</code></p>\n<h2 id=\"anaconda安装pytorch\"><a class=\"anchor\" href=\"#anaconda安装pytorch\">#</a> Anaconda 安装<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1QeXRvcmNoJmFtcDtzcG09MTAwMS4yMTAxLjMwMDEuNzAyMA==\"> Pytorch</span></h2>\n<h3 id=\"创建虚拟环境\"><a class=\"anchor\" href=\"#创建虚拟环境\">#</a> 创建虚拟环境</h3>\n<p>第一个程序环境名为 pytorch</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n pytorch python=3.7 （pytorch 是我自己取的名字）</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"激活环境\"><a class=\"anchor\" href=\"#激活环境\">#</a> 激活环境</h3>\n<p>使用下面这条命令，激活环境：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate pytorch</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"可能出现的问题\"><a class=\"anchor\" href=\"#可能出现的问题\">#</a> 可能出现的问题</h3>\n<p>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</p>\n<p>出现下面所示 1：</p>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/yBq74es8zYAwDiC.png\" alt=\"image.png\" /></p>\n<p>问题出现是因为尽管安装了  <code>Anaconda</code>  或  <code>Miniconda</code> ，</p>\n<p>但是你的 shell 环境没有被正确配置以识别  <code>conda</code>  命令。</p>\n<p><strong>解决办法：</strong></p>\n<ol>\n<li>\n<p><strong>启用  <code>conda</code>  命令</strong>:</p>\n<ul>\n<li>\n<p>如果你使用的是 Bash shell 或者类似 Bourne 的 shell，你需要将  <code>conda</code>  的初始化脚本添加到你的 shell 配置文件中（通常是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.bashrc</span><br></pre></td></tr></table></figure></p>\n<p>文件），以便  <code>conda</code>  命令可以被识别。根据提供的信息，你可以通过运行以下命令来做到这一点：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;. /root/anaconda3/etc/profile.d/conda.sh&quot; &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure></p>\n<p>这会将初始化脚本的路径添加到你的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.bashrc</span><br></pre></td></tr></table></figure></p>\n<p>文件中，每次启动新的 shell 会话时都会自动执行这个脚本。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>激活  <code>conda</code>  的基础（root）环境</strong>:</p>\n<ul>\n<li>\n<p>为了使用 <code>conda</code>  管理你的环境和包，你需要激活  <code>conda</code>  的基础环境。你可以通过在终端中运行以下命令来做到这一点：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>如果你想在每次打开新的终端会话时自动激活  <code>conda</code>  的基础环境，你可以将上述命令添加到你的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.bashrc</span><br></pre></td></tr></table></figure></p>\n<p>文件中：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;conda activate&quot; &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>移除旧的 PATH 设置</strong>:</p>\n<ul>\n<li>\n<p>如果你之前尝试通过直接修改  <code>PATH</code>  环境变量来使用  <code>conda</code> ，你应该从你的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.bashrc</span><br></pre></td></tr></table></figure></p>\n<p>文件中移除这样的行：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=&quot;/root/anaconda3/bin:$PATH&quot;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>这是因为直接修改  <code>PATH</code>  不再是推荐的方法，使用  <code>conda</code>  的初始化脚本和  <code>conda activate</code>  命令是更好的选择。</p>\n</li>\n</ul>\n</li>\n</ol>\n<p>完成以上步骤后，关闭并重新打开你的终端，或者运行  <code>source ~/.bashrc</code>  来使改动生效。这样，你的 shell 环境就被正确配置了，应该能够识别  <code>conda</code>  命令了。</p>\n<p><strong>出现下面所示 2:</strong></p>\n<p><code>(pytorch) root@dev-wyf-react:~/wyf#</code></p>\n<p>检测环境是否安装好:</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda info --envs</span><br></pre></td></tr></table></figure></p>\n<p>出现下面所示：</p>\n<p><code>base /root/anaconda3</code> <br />\n <code>pytorch * /root/anaconda3/envs/pytorch</code></p>\n<p>然后去选择适合自己的 pytorch 版本，点击下面那个链接:</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXRvcmNoLm9yZy8=\">https://pytorch.org/</span></p>\n<p>get started</p>\n<p><img data-src=\"C:%5CUsers%5C29758%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240207012929597.png\" alt=\"image-20240207012929597\" /></p>\n<p>输入到控制台:</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia</span><br></pre></td></tr></table></figure></p>\n<p>弹出提示，输入 y，即可完成安装，显示 “done”。</p>\n<p>——————————————————————————————</p>\n<h3 id=\"测试安装成功\"><a class=\"anchor\" href=\"#测试安装成功\">#</a> 测试安装成功</h3>\n<p>首先输入：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python</span><br></pre></td></tr></table></figure></p>\n<p>然后在输入：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import torch</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/M9jTXGulqSwhE8d.png\" alt=\"image.png\" /></p>\n<p>如果没有可以<strong>重新下载康康</strong>或者<strong>查看环境</strong></p>\n<h3 id=\"退出之后如何查看自己安装的环境\"><a class=\"anchor\" href=\"#退出之后如何查看自己安装的环境\">#</a> 退出之后如何查看自己安装的环境</h3>\n<p>如果在一台服务器上安装多个环境，一下子可能不记得需要激活哪个环境名称，这时候我们需要使用下面这个命令来查找：</p>\n<blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda info --envs</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/hkcRHwlpSIx2UJ1.png\" alt=\"image-20240207012544351\" /></p>\n<h2 id=\"复盘项目\"><a class=\"anchor\" href=\"#复盘项目\">#</a> 复盘项目</h2>\n<p>打开</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NWTEFCLVVuaWJvL2lucjJ2ZWM/dGFiPXJlYWRtZS1vdi1maWxl\">https://github.com/CVLAB-Unibo/inr2vec?tab=readme-ov-file</span></p>\n<h3 id=\"配置git\"><a class=\"anchor\" href=\"#配置git\">#</a> 配置 git</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git --version</span><br></pre></td></tr></table></figure></p>\n<p>如果已经安装过了就可以直接跳到 3.2 了</p>\n<p>也不知道阿里云服务器什么发行版，输入如下命令查看</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/*-release</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/WQzUZjoMIs6tX4L.png\" alt=\"image.png\" /></p>\n<p>根据信息，Alibaba Cloud Linux 3 是一个与 RHEL（Red Hat Enterprise Linux）、Fedora 和 CentOS 兼容的发行版。</p>\n<p>使用与这些发行版相同的包管理器，大多数情况下将是  <code>yum</code>  或者在某些新版本中是  <code>dnf</code> 。</p>\n<p>以下命令来安装 <code>git</code> ：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum update</span><br><span class=\"line\">sudo yum install git</span><br></pre></td></tr></table></figure></p>\n<p>或者，如果系统支持  <code>dnf</code> ：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dnf update</span><br><span class=\"line\">sudo dnf install git</span><br></pre></td></tr></table></figure></p>\n<p>执行更新（ <code>yum update</code>  或  <code>dnf update</code> ）是一个好习惯，它会确保所有的软件包都是最新的。然后，使用安装命令来安装 <code>git</code> 。</p>\n<h3 id=\"git-clone-代码\"><a class=\"anchor\" href=\"#git-clone-代码\">#</a> git clone 代码</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/CVLAB-Unibo/inr2vec.git</span><br></pre></td></tr></table></figure></p>\n<p>等一会儿就下好啦</p>\n<h3 id=\"创建对应的环境\"><a class=\"anchor\" href=\"#创建对应的环境\">#</a> 创建对应的环境</h3>\n<p>！！！！以下内容仅作知识补充</p>\n<h4 id=\"创建虚拟环境-2\"><a class=\"anchor\" href=\"#创建虚拟环境-2\">#</a> <strong>创建虚拟环境</strong>：</h4>\n<p>​\tAnaconda 创建环境：<br />\n​\t比如，创建 pyhon＝3.7 的版本环境取名叫 <code>inr2vec</code></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n inr2vec python=3.7</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"删除虚拟环境操作谨慎操作\"><a class=\"anchor\" href=\"#删除虚拟环境操作谨慎操作\">#</a> <strong>删除虚拟环境操作</strong>：（谨慎操作）</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda remove -n inr2vec --all</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"激活环境-2\"><a class=\"anchor\" href=\"#激活环境-2\">#</a> <strong>激活环境</strong></h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate inr2vec</span><br></pre></td></tr></table></figure></p>\n<p>如果发现进不去，那么</p>\n<p>先:  <code>source activate inr2vec</code></p>\n<p>再:  <code>conda activate inr2vec</code></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看python版本</span></span><br><span class=\"line\">python --version</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"查看环境下已有的安装包\"><a class=\"anchor\" href=\"#查看环境下已有的安装包\">#</a> 查看环境下已有的安装包：</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda <span class=\"built_in\">list</span></span><br></pre></td></tr></table></figure></p>\n<p>效果如下</p>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/y6pf4seiK3kMhlY.png\" alt=\"image.png\" /></p>\n<p>在进入虚拟环境的情况下， <code>安装对应包</code> 直接</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install xxxx 或者 conda install xxxx</span><br></pre></td></tr></table></figure></p>\n<p>如：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install tensorflow</span><br></pre></td></tr></table></figure></p>\n<p><code>注意</code> ：此环境下的安装包在 <code>退出虚拟环境后无法使用</code> 的</p>\n<h4 id=\"退出当前虚拟环境\"><a class=\"anchor\" href=\"#退出当前虚拟环境\">#</a> 退出当前虚拟环境：</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda deactivate</span><br></pre></td></tr></table></figure></p>\n<p>补充：Linux 下查看已有虚拟环境：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda-env <span class=\"built_in\">list</span></span><br></pre></td></tr></table></figure></p>\n<p>提醒：有时候遇到过几次异常，所以开启完虚拟环境后最好使用命令</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">which python</span><br></pre></td></tr></table></figure></p>\n<p>判断编译器位置最为稳妥（inr2vec 是虚拟环境名），有一个 <code>home/anaconda/envs/nlp/bin/python</code></p>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/6YRAH5giOa2KkId.png\" alt=\"image.png\" /></p>\n<p>如果发现没有在  <code>anaconda/envs</code>  的虚拟环境 (inr2vec) 下，则多次使用</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda deactivate</span><br></pre></td></tr></table></figure></p>\n<p>先退出当前环境，然后再重新使用  <code>source activate xxxx</code>  进入环境</p>\n<h4 id=\"重命名环境\"><a class=\"anchor\" href=\"#重命名环境\">#</a> 重命名环境</h4>\n<p>conda 其实没有重命名指令，实现重命名是通过 clone 完成的，分两步：<br />\n①先 clone 一份 new name 的环境<br />\n②删除 old name 的环境</p>\n<p>如，将 <code>inr2vec</code>  重命名成 <code>tf2</code></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n tf2 --clone inr2vec</span><br></pre></td></tr></table></figure></p>\n<p>删除原环境</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda remove -n inr2vec --<span class=\"built_in\">all</span></span><br></pre></td></tr></table></figure></p>\n<p>————————————</p>\n<h3 id=\"根据readme-继续操作\"><a class=\"anchor\" href=\"#根据readme-继续操作\">#</a> 根据 readme 继续操作</h3>\n<p><img data-src=\"C:%5CUsers%5C29758%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240207095527514.png\" alt=\"image-20240207095527514\" /></p>\n<p><img data-src=\"C:%5CUsers%5C29758%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240207095541074.png\" alt=\"image-20240207095541074\" /></p>\n<h3 id=\"跟着操作细节\"><a class=\"anchor\" href=\"#跟着操作细节\">#</a> 跟着操作细节</h3>\n<p>Create a virtual environment and install the library  <code>pycarus</code> :</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 -m venv .venv</span><br><span class=\"line\">source .venv/bin/activate</span><br><span class=\"line\">pip install -U pip setuptools</span><br><span class=\"line\">pip install pycarus</span><br></pre></td></tr></table></figure></p>\n<p>前两个没问题 第三个开始发现太慢了</p>\n<p>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</p>\n<p>于是决定来个镜像</p>\n<h4 id=\"为本地conda环境配置国内镜像源\"><a class=\"anchor\" href=\"#为本地conda环境配置国内镜像源\">#</a> 为本地 conda 环境配置国内镜像源</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda config --add channels https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"为服务器的conda环境配置国内镜像源\"><a class=\"anchor\" href=\"#为服务器的conda环境配置国内镜像源\">#</a> 为服务器的 conda 环境配置国内镜像源</h4>\n<p>添加清华镜像源</p>\n<p><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/win-64/</span><br></pre></td></tr></table></figure></p>\n<p><em>【注】使用 http 不是 https，在后面加上 win-64</em></p>\n<h4 id=\"常用操作\"><a class=\"anchor\" href=\"#常用操作\">#</a> 常用操作</h4>\n<p>显示添加的源通道</p>\n<p><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda config --show-sources</span><br></pre></td></tr></table></figure></p>\n<p>移除某一镜像源</p>\n<p><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda config --remove channels 源名称或链接 </span><br></pre></td></tr></table></figure></p>\n<p>验证安装</p>\n<p>为了确保正确安装了 PyTorch，我们可以通过运行示例 PyTorch 代码来验证安装。在这里，我们将构造一个随机初始张量</p>\n<p>在 anaconda prompt (miniconda3) 命令行或者 shell 中，输入：</p>\n<p><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python </span><br></pre></td></tr></table></figure></p>\n<p>然后输入以下代码：</p>\n<p><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import torch </span><br><span class=\"line\">x = torch.rand(5, 3) </span><br><span class=\"line\">print(x)</span><br></pre></td></tr></table></figure></p>\n<p>输出应类似于以下内容：</p>\n<p><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tensor([[0.3380, 0.3845, 0.3217],</span><br><span class=\"line\">      [0.8337, 0.9050, 0.2650],</span><br><span class=\"line\">      [0.2979, 0.7141, 0.9069],</span><br><span class=\"line\">      [0.1449, 0.1132, 0.1375],</span><br><span class=\"line\">      [0.4675, 0.3947, 0.1426]])</span><br></pre></td></tr></table></figure></p>\n<p>此外，如果要检查 PyTorch 是否启用了 GPU 和 CUDA，请运行以下命令以返回是否启用了 CUDA 驱动程序：</p>\n<p><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import torch  </span><br><span class=\"line\">torch.cuda.is_available()</span><br></pre></td></tr></table></figure></p>\n<p>如果返回了 True， 恭喜您，成功安装了 GPU 版本。</p>\n<p>——————————————————————————————</p>\n<p>Then, try to import  <code>pycarus</code>  to get the command that you can run to install all the needed Pytorch libraries:</p>\n<p><strong>常用的检查有没有 $ pip install -U pip setuptools 装好包的步骤：</strong></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python3</span><br><span class=\"line\">&gt;&gt;&gt; import pycarus</span><br><span class=\"line\">...</span><br><span class=\"line\">ModuleNotFoundError: PyTorch is not installed. Install it by running: source /XXX/.venv/lib/python3.8/site-packages/pycarus/install_torch.sh</span><br></pre></td></tr></table></figure></p>\n<p>exit（）退出 python 环境</p>\n<p>不记得有没有安装好</p>\n<p><code>$ pip install -U pip setuptools</code> <br />\n <code>$ pip install pycarus</code></p>\n<p>重新执行啦</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install -U pip setuptools</span><br></pre></td></tr></table></figure></p>\n<p>————————————————————————</p>\n<p>出现这种情况</p>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/d7BQk6IHzu8DwAP.png\" alt=\"image.png\" /></p>\n<p>成功安装</p>\n<p>waring 是因为</p>\n<blockquote>\n<p>在 Linux 中， <code>root</code>  是具有最高权限的用户账户，可以访问和修改系统的任何部分。以 <code>root</code>  用户身份运行 <code>pip</code>  可能会导致权限问题，尤其是当系统的包管理器试图管理相同的 Python 包时。这可能会导致系统中的包版本冲突或损坏。</p>\n</blockquote>\n<p>解决方法（无虚拟环境条件）</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 -m venv myenv        # 创建一个名为myenv的虚拟环境</span><br><span class=\"line\">source myenv/bin/activate    # 激活虚拟环境</span><br><span class=\"line\">pip install package_name     # 在虚拟环境中安装包</span><br></pre></td></tr></table></figure></p>\n<p>——————————————————</p>\n<h3 id=\"尾声磁盘空间不足\"><a class=\"anchor\" href=\"#尾声磁盘空间不足\">#</a> 尾声：磁盘空间不足</h3>\n<p>安装包后</p>\n<p><code>ERROR: Could not install packages due to an OSError: [Errno 28] No space left on device</code></p>\n<p>磁盘空间不足的错误（ <code>No space left on device</code> ）</p>\n<p><strong>删除不必要的文件或数据</strong>：首先，检查您的磁盘空间使用情况，查找并删除不再需要的大文件或目录。可以使用如 <code>du</code>  和 <code>df</code>  命令来帮助您找出使用最多磁盘空间的目录。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df -h          # 查看每个挂载点的磁盘使用情况</span><br><span class=\"line\">du -sh /*      # 查看根目录下每个文件夹的大小</span><br></pre></td></tr></table></figure></p>\n<p>如果发现特定目录特别大，可以深入查看该目录下的内容：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -sh /path/to/directory/*   # 替换路径以检查特定目录</span><br></pre></td></tr></table></figure></p>\n<p>当找到不需要的大文件或目录时，使用 <code>rm</code>  命令删除它们：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf /path/to/directory/large_file   # 替换路径和文件名以删除大文件</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/8IZJhUogzwb4jA5.png\" alt=\"image.png\" /></p>\n<ol>\n<li>\n<p><strong>清理缓存</strong>：某些系统和应用程序会创建缓存文件，这些文件可以删除以释放空间。例如，您可以清理包管理器的缓存：</p>\n<ul>\n<li>\n<p>如果您的系统基于 RPM（如 Alibaba Cloud Linux），您可以使用以下命令清理缓存：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum clean all  # 或者 sudo dnf clean all</span><br></pre></td></tr></table></figure></p>\n<p>这将删除缓存的软件包和软件仓库元数据。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>删除旧的或无用的虚拟环境</strong>：如果您创建了虚拟环境并且不再需要它们，可以直接删除包含虚拟环境的目录。假设您的虚拟环境名为 <code>myenv</code> ，可以使用以下命令：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf myenv</span><br></pre></td></tr></table></figure></p>\n<p>请确保只删除不再需要的环境，因为这个操作是不可逆的。</p>\n</li>\n<li>\n<p><strong>卸载不需要的软件包</strong>：如果安装了不再需要的软件包，可以将它们卸载以释放空间。</p>\n<p>查找并卸载不再需要的软件包：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum remove package_name   # 替换package_name为您想要卸载的包名</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p><strong>检查并清理日志文件</strong>：系统日志文件有时会变得很大。检查 <code>/var/log</code>  目录并删除旧的或不必要的日志文件。对于日志文件的清理，建议谨慎行事，因为某些日志文件对于系统运维和故障排查很重要。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo du -sh /var/log/*     # 查看日志文件的大小</span><br><span class=\"line\">sudo rm /var/log/old_log_file   # 删除旧的或大的日志文件，替换old_log_file为实际文件名</span><br></pre></td></tr></table></figure></p>\n<p><strong>注意</strong>：在删除任何日志文件之前，请确保这些文件不是正在使用的或对系统运行至关重要的。</p>\n</li>\n<li>\n<p><strong>检查用户文件</strong>：检查您的家目录下的文件，并移除不再需要的内容：</p>\n</li>\n</ol>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~                    # 切换到家目录</span><br><span class=\"line\">du -sh *               # 查看家目录下文件和目录的大小</span><br><span class=\"line\">rm -rf unnecessary_folder_or_file   # 删除不需要的文件或目录</span><br></pre></td></tr></table></figure></p>\n<p><strong>警告</strong>： <code>rm -rf</code>  命令非常强大，它会在没有任何提示的情况下删除文件和目录。在使用之前，请确保您正在删除正确的文件或目录。如果不确定，最好备份或者单独删除文件而非整个目录。</p>\n<p>但要请格外小心，不要删除不了解的系统文件，这可能会导致系统不稳定或不可用。如果您不确定某个文件或目录的用途，请在删除前进行查询或备份。</p>\n<h4 id=\"最后查看服务器情况\"><a class=\"anchor\" href=\"#最后查看服务器情况\">#</a> 最后查看服务器情况</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">free -m</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/wZbEkGv5XIfuOep.png\" alt=\"image.png\" /></p>\n<blockquote>\n<p>Mem 行（单位均为 M）：<br />\n* total：内存总数<br />\n * used：已使用内存数<br />\n * free：空闲内存数<br />\n * shared：当前废弃不用<br />\n * buffers：缓存内存数（Buffer）<br />\n* cached：缓存内舒数（Page）</p>\n<p>(-/+ buffers/cache) 行：</p>\n<ul>\n<li>（-buffers/cache）: 真正使用的内存数，指的是第一部分的 used - buffers - cached</li>\n<li>（+buffers/cache）: 可用的内存数，指的是第一部分的 free + buffers + cached</li>\n</ul>\n<p>Swap 行指交换分区。</p>\n</blockquote>\n<p>实际上不要看 free 少就觉得内存不足了，buffers 和 cached 都是可以在使用内存时拿来用的，应该以 (-/+ buffers/cache) 行的 free 和 used 来看。只要没发现 swap 的使用，就不用太担心，如果 swap 用了很多，那就要考虑增加物理内存了。</p>\n<h4 id=\"查看cpu使用情况\"><a class=\"anchor\" href=\"#查看cpu使用情况\">#</a> 查看 CPU 使用情况</h4>\n<p>使用命令：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">top</span><br></pre></td></tr></table></figure></p>\n<p>大致结果类似下图</p>\n<p>上方文字部分的红框为总的 CPU 占用百分率，下方的表格是每个进程的 CPU 占用率，在表格第一行可以看到红框中占用率超过了 150%，这是因为服务器是多核 CPU，而该进程使用了多核。</p>\n<h4 id=\"查看显卡使用情况\"><a class=\"anchor\" href=\"#查看显卡使用情况\">#</a> 查看显卡使用情况</h4>\n<p>使用命令：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvidia-smi</span><br></pre></td></tr></table></figure></p>\n<p>大致结果类似下图：</p>\n<p><img data-src=\"https://s2.loli.net/2024/02/07/kBApnN1zP2gU4M5.png\" alt=\"image.png\" /></p>\n<p>表格中会显示显卡的一些信息，第一行是版本信息，第二行是标题栏，第三行就是具体的显卡信息了，如果有多个显卡，会有多行，每一行的信息值对应标题栏对应位置的信息。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* GPU：编号</span><br><span class=\"line\">* Fan：风扇转速，在0到100%之间变动，这里是42%</span><br><span class=\"line\">* Name：显卡名，这里是TITAN X</span><br><span class=\"line\">* Temp：显卡温度，这里是69摄氏度</span><br><span class=\"line\">* Perf：性能状态，从P0到P12，P0性能最大，P12最小</span><br><span class=\"line\">* Persistence-M：持续模式的状态开关，该模式耗能大，但是启动新GPU应用时比较快，这里是off</span><br><span class=\"line\">* Pwr：能耗</span><br><span class=\"line\">* Bus-Id：涉及GPU总线的东西</span><br><span class=\"line\">* Disp.A：表示GPU的显示是否初始化</span><br><span class=\"line\">* Memory-Usage：现存使用率，这里已经快满了</span><br><span class=\"line\">* GPU-Util：GPU利用率</span><br><span class=\"line\">* Compute M.：计算模式</span><br></pre></td></tr></table></figure></p>\n<p>需要注意的一点是显存占用率和 GPU 占用率是两个不一样的东西，类似于内存和 CPU，两个指标的占用率不一定是互相对应的。</p>\n<p>在下面就是每个进程使用的 GPU 情况了。</p>\n<p>———————————————</p>\n<p>由于项目复盘起来直接撑爆内存条，所以下一篇学习一些 clip 和 ulip</p>\n<p>参考文档</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5ZjIwMTcvYXJ0aWNsZS9kZXRhaWxzLzExODY3Njc2NQ==\">https://blog.csdn.net/wyf2017/article/details/118676765</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYnJpdGhUb1NwcmluZy9wLzEzNDk0OTY2Lmh0bWw=\">https://www.cnblogs.com/brithToSpring/p/13494966.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80MzQzNTY5NDc=\">https://zhuanlan.zhihu.com/p/434356947</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Nsb3Vkb3hfL2FydGljbGUvZGV0YWlscy83ODY1MTYzNw==\">https://blog.csdn.net/Cloudox_/article/details/78651637</span></p>\n",
            "tags": []
        },
        {
            "id": "https://jinjiaojiao.top/2024/02/06/hello-world/",
            "url": "https://jinjiaojiao.top/2024/02/06/hello-world/",
            "title": "Hello World",
            "date_published": "2024-02-06T14:30:17.085Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}